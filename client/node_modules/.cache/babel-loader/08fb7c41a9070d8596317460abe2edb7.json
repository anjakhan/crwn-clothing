{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anja\\\\Documents\\\\WebDev2020\\\\ZeroToMastery\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SignInTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      handleChange: this.handleChange,\n      value: this.state.password,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: signInWithGoogle,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, ' ', \"Sign In with Google\", ' '))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/Anja/Documents/WebDev2020/ZeroToMastery/crwn-clothing/src/components/sign-in/sign-in.jsx"],"names":["React","FormInput","CustomButton","auth","signInWithGoogle","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,+BAAvC;AAEA,SACIC,eADJ,EAEIC,WAFJ,EAGIC,mBAHJ,QAIO,kBAJP;;AAMA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,YAPmB,GAOJ,MAAMC,KAAN,IAAe;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;;AAEA,UAAI;AACA,cAAMd,IAAI,CAACe,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,CAAN;AACA,aAAKG,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAAd;AACH,OAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KAjBkB;;AAAA,SAkBnBG,YAlBmB,GAkBJV,KAAK,IAAI;AACpB,YAAM;AAAEW,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBZ,KAAK,CAACa,MAA9B;AACA,WAAKP,QAAL,CAAc;AAAE,SAACM,IAAD,GAAQD;AAAV,OAAd;AACH,KArBkB;;AAEf,SAAKP,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAiBDW,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ,eAII;AAAM,MAAA,QAAQ,EAAE,KAAKf,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,YAAY,EAAE,KAAKW,YAHvB;AAII,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWF,KAJtB;AAKI,MAAA,KAAK,EAAC,OALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eASI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,YAAY,EAAE,KAAKQ,YAHvB;AAII,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWD,QAJtB;AAKI,MAAA,KAAK,EAAC,UALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAiBI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAEZ,gBAArC;AAAuD,MAAA,cAAc,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,GADL,yBAGK,GAHL,CAFJ,CAjBJ,CAJJ,CADJ;AAkCH;;AA3DgC;;AA8DrC,eAAeI,MAAf","sourcesContent":["import React from 'react';\r\n\r\nimport FormInput from '../form-input/form-input';\r\nimport CustomButton from '../custom-button/custom-button';\r\n\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n    SignInContainer,\r\n    SignInTitle,\r\n    ButtonsBarContainer\r\n} from './sign-in.styles';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const { email, password } = this.state;\r\n\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            this.setState({ email: '', password: '' });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    handleChange = event => {\r\n        const { value, name } = event.target;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SignInContainer>\r\n                <SignInTitle>I already have an account</SignInTitle>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput \r\n                        name='email' \r\n                        type='email'\r\n                        handleChange={this.handleChange}\r\n                        value={this.state.email}\r\n                        label='email'\r\n                        required \r\n                    />\r\n                    <FormInput \r\n                        name='password' \r\n                        type='password'\r\n                        handleChange={this.handleChange}\r\n                        value={this.state.password}\r\n                        label='password'\r\n                        required \r\n                    />\r\n                    <ButtonsBarContainer>\r\n                        <CustomButton type='submit'>Sign In</CustomButton>\r\n                        <CustomButton type='button' onClick={signInWithGoogle} isGoogleSignIn>\r\n                            {' '}\r\n                            Sign In with Google\r\n                            {' '}\r\n                        </CustomButton>\r\n                    </ButtonsBarContainer>\r\n                    \r\n                </form>\r\n            </SignInContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}